workspace:
  base: /go
  path: src/github.com/udistrital/${DRONE_REPO##udistrital/}
  when:
      branch:
      - master
      - test
kind: pipeline
name: API_deploy

steps: 
  - name: publish_ecr
    image: plugins/ecr
    settings:
      access_key: 
        from_secret: AWS_ACCESS_KEY_ID
      secret_key: 
        from_secret: AWS_SECRET_ACCESS_KEY
      repo: oas
      registry:
        from_secret: AWS_REGISTRY
      dockerfile: src/main/Docker/Dockerfile
      tags:
        - ${DRONE_COMMIT:0:7}
        - latest
    when:
      branch:
        - test
        - master
      event:
        - push

  
  - name: go-awsecs
    image: golang:1.9
    environment:
      AWS_ACCESS_KEY_ID:
        from_secret: AWS_ACCESS_KEY_ID
      AWS_SECRET_ACCESS_KEY:
        from_secret: AWS_SECRET_ACCESS_KEY      
    commands:
     - case ${DRONE_BRANCH} in
          test) 
            AMBIENTE=test 
            CLUSTER=test
            ;;
          master) 
            AMBIENTE=prod
            CLUSTER=oas
            ;;
       esac
     - AWS_REGION=us-east-1
     - SERVICE=${DRONE_REPO##udistrital/}_$AMBIENTE
     - MYCONTAINER=$${AWS_SECRET_ACCESS_KEY}/as:{DRONE_REPO##udistrital/}:${DRONE_COMMIT:0:7}
     - container_name=${DRONE_REPO##udistrital/}
     - apt-get update
     - apt-get install unzip
     - wget https://github.com/Autodesk/go-awsecs/releases/download/v1.1update-aws-ecs-service-linux-amd64.zip
     - unzip update-aws-ecs-service-linux-amd64.zip -d /go/bin
     - AWS_ACCESS_KEY_ID=$${AWS_ACCESS_KEY_ID} AWS_SECRET_ACCESS_KEY=$${AWS_SECRET_ACCESS_KEY} AWS_REGION=$AWS_REGION
       $GOPATH/bin/update-aws-ecs-service -cluster $CLUSTER -service $SERVICE -container-image $container_name=$MYCONTAINER    
    when:
      branch:
      - test
      - master
      event:
      - push      
  
  - name: NotifyTelegram
    image: appleboy/drone-telegram
    settings:
      token:
        from_secret: telegram_token
      to:
        from_secret: telegram_to
      format: html
      message: >
        {{#success build.status}}
          <code>{{repo.owner}}/{{repo.name}}</code> <a href="{{build.link}}">SUCCESS</a> 
          <code>{{commit.branch}}</code>@<a href="{{commit.link}}">{{truncate commit.sha 7}}</a><code> By:{{commit.author}} &#129325 </code>
        {{else}}
          <code>{{repo.owner}}/{{repo.name}}</code> <a href="{{build.link}}">FAILURE</a>
          <code>{{commit.branch}}</code>@<a href="{{commit.link}}">{{truncate commit.sha 7}}</a><code> By:{{commit.author}} &#128561 </code>
        {{/success}}
    when:
      branch:
      - master
      - test
      status:
      - failure
      - success
